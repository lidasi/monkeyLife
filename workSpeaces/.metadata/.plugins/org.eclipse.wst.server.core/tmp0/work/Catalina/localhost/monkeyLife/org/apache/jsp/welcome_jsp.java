/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.44
 * Generated at: 2017-07-11 09:25:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class welcome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"css/main.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/fisheye-iutil.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery.jqDock.min.js\"></script>\r\n");
      out.write(" <script type=\"text/javascript\">\r\n");
      out.write("        $(function(){\r\n");
      out.write("           /*  alert(\"可视高:\"+$(window).height()); //浏览器当前窗口可视区域高度\r\n");
      out.write("             alert(\"文档高:\"+$(document).height()); //浏览器当前窗口文档的高度\r\n");
      out.write("             alert(\"body高:\"+$(document.body).height());//浏览器当前窗口文档body的高度\r\n");
      out.write("             alert(\"总高高:\"+$(document.body).outerHeight(true));//浏览器当前窗口文档body的总高度 包括border padding margin\r\n");
      out.write("\r\n");
      out.write("             alert(\"可视宽:\"+$(window).width()); //浏览器当前窗口可视区域宽度\r\n");
      out.write("             alert(\"文档宽:\"+$(document).width());//浏览器当前窗口文档对象宽度\r\n");
      out.write("             alert(\"body宽:\"+$(document.body).width());//浏览器当前窗口文档body的宽度\r\n");
      out.write("             alert(\"总宽宽:\"+$(document.body).outerWidth(true));//浏览器当前窗口文档body的总宽度 包括border padding margin */\r\n");
      out.write("            var height = 931;\r\n");
      out.write("            var width = 1800;\r\n");
      out.write("            $(\"#backgroundImage\").height(height).width(width);\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("<title>My name's badUncle</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"backgroundImage\">\r\n");
      out.write("\t</div>\r\n");
      out.write("<div id=\"iframeDiv\">\r\n");
      out.write("    <iframe width=\"99%\"\r\n");
      out.write("            height=\"5%\"\r\n");
      out.write("            frameborder=\"no\"\r\n");
      out.write("            border=\"0\"\r\n");
      out.write("            marginwidth=\"0\"\r\n");
      out.write("            marginheight=\"0\"\r\n");
      out.write("            scrolling=\"no\"\r\n");
      out.write("            allowtransparency=\"yes\"\r\n");
      out.write("            src=\"jsp/topbar.jsp\"></iframe>\r\n");
      out.write("    <iframe\r\n");
      out.write("            width=\"20%\"\r\n");
      out.write("            height=\"600px\"\r\n");
      out.write("            frameborder=\"no\"\r\n");
      out.write("            border=\"0\"\r\n");
      out.write("            marginwidth=\"0\"\r\n");
      out.write("            marginheight=\"0\"\r\n");
      out.write("            scrolling=\"no\"\r\n");
      out.write("            allowtransparency=\"yes\"\r\n");
      out.write("            src=\"jsp/menubar.jsp\">\r\n");
      out.write("    </iframe>\r\n");
      out.write("    <iframe width=\"89\"\r\n");
      out.write("            height=\"600px\"\r\n");
      out.write("            frameborder=\"no\"\r\n");
      out.write("            border=\"0\"\r\n");
      out.write("            marginwidth=\"0\"\r\n");
      out.write("            marginheight=\"0\"\r\n");
      out.write("            scrolling=\"no\"\r\n");
      out.write("            allowtransparency=\"yes\"\r\n");
      out.write("            src=\"jsp/topbar.jsp\">\r\n");
      out.write("    </iframe>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
